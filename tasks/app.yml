---

- name: Create app directory
  file:
      path={{ APP_PATH }}
      state=directory
      mode=755
      owner=root
      group=root

- include: app-src-checkout.yml
#  when: APP_CODE_PATH | trim == ''
  when: (APP_CODE_PATH is none) or (APP_CODE_PATH | trim == '')

- include: app-src-link.yml
  when: not((APP_CODE_PATH is none) or (APP_CODE_PATH | trim == ''))

- name: link source code to standar "app" dir
  file: state=link owner=root group=root force=yes
        src={{ APP_PATH }}/src/{{ APP_APP_FOLDER }}
        dest={{ APP_PATH }}/app

- name: copy template_vars.ini
  copy:
    src={{ APP_TEMPLATE_VARS_SRC }} dest={{ APP_PATH }}/template_vars.ini
    owner=root group=root mode=0700
  when: APP_TEMPLATE_VARS_SRC is defined and APP_TEMPLATE_VARS_SRC != '' and  APP_DJANGO == True

- name: Set APP_ENVIRONMENT_NAME if not defined
  set_fact:
     APP_ENVIRONMENT_NAME: "{{ APP_NAME }}"
  when: APP_ENVIRONMENT_NAME is not defined or APP_ENVIRONMENT_NAME == ''

- include: uwsgi.yml

- name: copy vars.sh utility script
  copy:
    src=conf/vars.sh dest={{ APP_PATH }}/vars.sh
    owner=root group=root mode=0700

- name: copy uwsgi.pre.sh utility script
  copy:
    src=conf/uwsgi.pre.sh dest={{ APP_PATH }}/uwsgi.pre.sh
    owner=root group=root mode=0700

- name: copy env.sh utility script
  copy:
    src=conf/env.sh dest={{ APP_PATH }}/env.sh
    owner=root group=root mode=0600

- include: python.yml

- name: "install app requirements from {{ APP_PATH }}/src/{{ APP_REQUIREMENTS }}"
  pip:
    virtualenv={{ APP_PATH }}/venv
    requirements={{ APP_PATH }}/src/{{ APP_REQUIREMENTS }}
  become: true
  become_user: "{{ APP_DEPLOY_USER }}"

- file:
    path: "{{ APP_PATH }}/app/manage.py"
    mode: 0755
  when: APP_DJANGO == True

- name: run migrations
  django_manage:
    command: migrate
    app_path: "{{ APP_PATH }}/app/"
    virtualenv: "{{ APP_PATH }}/venv/"
  environment:
    DB_NAME: "{{ APP_DB_NAME }}"
    DB_USER: "{{ APP_DB_USER }}"
    DB_PASSWORD: "{{ APP_DB_PASSWORD }}"
    DB_HOSTNAME: "{{ APP_DB_HOSTNAME }}"
    DB_PORT: "{{ APP_DB_PORT }}"
    ENVIRONMENT_NAME: "{{ APP_ENVIRONMENT_NAME }}"
  when: APP_DJANGO == True
  become: true
  become_user: www-data
  tags: migrate

- name: "Load fixtures: {{ APP_LOAD_FIXTURES }}"
  django_manage:
    command: loaddata
    app_path: "{{ APP_PATH }}/app/"
    virtualenv: "{{ APP_PATH }}/venv/"
    fixtures: "{{ APP_LOAD_FIXTURES }}"
  environment:
    DB_NAME: "{{ APP_DB_NAME }}"
    DB_USER: "{{ APP_DB_USER }}"
    DB_PASSWORD: "{{ APP_DB_PASSWORD }}"
    ENVIRONMENT_NAME: "{{ APP_ENVIRONMENT_NAME }}"
  become: true
  become_user: www-data
  tags: loaddata
  when: "(APP_DJANGO == True) and (APP_LOAD_FIXTURES is not none) and (APP_LOAD_FIXTURES != '')"

- name: Create app/static directory
  file:
      path={{ APP_PATH }}/static
      state=directory
      mode=750
      owner=www-data
      group=www-data

- name: copy app static files
  django_manage:
    command: collectstatic
    app_path: "{{ APP_PATH }}/app/"
    virtualenv: "{{ APP_PATH }}/venv/"
  environment:
    DB_NAME: "{{ APP_DB_NAME }}"
    DB_USER: "{{ APP_DB_USER }}"
    DB_PASSWORD: "{{ APP_DB_PASSWORD }}"
    DB_HOSTNAME: "{{ APP_DB_HOSTNAME }}"
    DB_PORT: "{{ APP_DB_PORT }}"
    ENVIRONMENT_NAME: "{{ APP_ENVIRONMENT_NAME }}"
    STATIC_ROOT: "{{ APP_PATH }}/static/"
  when: APP_DJANGO == True
  become: true
  become_user: www-data

- name: reload app
  file: path={{ APP_PATH }}/{{ UWSGI_INI_FILE }} state=touch
  tags: code, config
